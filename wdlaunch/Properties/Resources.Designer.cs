//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WDLaunch.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WDLaunch.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _140 {
            get {
                object obj = ResourceManager.GetObject("_140", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap _140_hover {
            get {
                object obj = ResourceManager.GetObject("_140_hover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-Aliasing.
        /// </summary>
        public static string AATerm {
            get {
                return ResourceManager.GetString("AATerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dgVoodoo Anti-Aliasing (MSAA)
        ///- Smooths out edges..
        /// </summary>
        public static string AATip {
            get {
                return ResourceManager.GetString("AATip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✱.
        /// </summary>
        public static string AdminModeTerm {
            get {
                return ResourceManager.GetString("AdminModeTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to Windows UAC, running White Day without admin privileges changes
        ///the location of your save files and screenshots to &apos;%localappdata%\VirtualStore&apos;
        ///instead of the main directory..
        /// </summary>
        public static string AdminModeTip {
            get {
                return ResourceManager.GetString("AdminModeTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct Launch.
        /// </summary>
        public static string AutoLaunchTerm {
            get {
                return ResourceManager.GetString("AutoLaunchTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using Direct Launch will bypass the official launcher and launch the game directly.
        ///- It&apos;s recommended you set your resolution in the official launcher before you enable this,
        ///or the game will default to 640x480.
        ///- With this enabled you can also access console mode by holding ALT..
        /// </summary>
        public static string AutoLaunchTip {
            get {
                return ResourceManager.GetString("AutoLaunchTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string CancelTerm {
            get {
                return ResourceManager.GetString("CancelTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uses dgVoodoo to convert the game&apos;s Direct3D graphics API to D3D 11.
        ///- Fixes compatibility issues as well as offering other enhancements.
        ///- Fixes the &apos;fast game speed&apos; issue..
        /// </summary>
        public static string D3D8WrapperTip {
            get {
                return ResourceManager.GetString("D3D8WrapperTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English.
        /// </summary>
        public static string EnglishTerm {
            get {
                return ResourceManager.GetString("EnglishTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix Locale.
        /// </summary>
        public static string FixLocaleTerm {
            get {
                return ResourceManager.GetString("FixLocaleTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string LangButtonTip {
            get {
                return ResourceManager.GetString("LangButtonTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runs the game with a Korean locale.
        ///- Essential if your system locale is not set to Korean.
        ///- Fixes many issues such as missing UI and random floating objects..
        /// </summary>
        public static string LocaleEmulatorTip {
            get {
                return ResourceManager.GetString("LocaleEmulatorTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string NoTerm {
            get {
                return ResourceManager.GetString("NoTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ohjaemi {
            get {
                object obj = ResourceManager.GetObject("ohjaemi", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ohjaemi_hover {
            get {
                object obj = ResourceManager.GetObject("ohjaemi_hover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ojbg {
            get {
                object obj = ResourceManager.GetObject("ojbg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the screenshots folder.
        ///Note: The location is different depending on whether the game is run in admin mode..
        /// </summary>
        public static string OpenCaptureDirTip {
            get {
                return ResourceManager.GetString("OpenCaptureDirTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the main directory..
        /// </summary>
        public static string OpenMainDirTip {
            get {
                return ResourceManager.GetString("OpenMainDirTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open the saves folder.
        ///Note: The location is different depending on whether the game is run in admin mode..
        /// </summary>
        public static string OpenSavesDirTip {
            get {
                return ResourceManager.GetString("OpenSavesDirTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap stbg {
            get {
                object obj = ResourceManager.GetObject("stbg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture Filtering.
        /// </summary>
        public static string TexFiltTerm {
            get {
                return ResourceManager.GetString("TexFiltTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dgVoodoo Texture Filtering
        ///- Enhances textures at angles..
        /// </summary>
        public static string TexFiltTip {
            get {
                return ResourceManager.GetString("TexFiltTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap transpbg {
            get {
                object obj = ResourceManager.GetObject("transpbg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently installed version of White Day Repackaged.
        ///Click to check for updates..
        /// </summary>
        public static string VersionTip {
            get {
                return ResourceManager.GetString("VersionTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap wdbg {
            get {
                object obj = ResourceManager.GetObject("wdbg", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] wdhelper {
            get {
                object obj = ResourceManager.GetObject("wdhelper", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap whitedayexe {
            get {
                object obj = ResourceManager.GetObject("whitedayexe", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap whitedayexe_hover {
            get {
                object obj = ResourceManager.GetObject("whitedayexe_hover", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrap Direct3D.
        /// </summary>
        public static string WrapD3DTerm {
            get {
                return ResourceManager.GetString("WrapD3DTerm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string YesTerm {
            get {
                return ResourceManager.GetString("YesTerm", resourceCulture);
            }
        }
    }
}
